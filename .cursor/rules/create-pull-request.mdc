---
description: 
globs: 
alwaysApply: false
---
# プルリクエスト作成プロセス

このドキュメントは、プルリクエストの作成プロセスを標準化し、効率的なレビューを促進するためのガイドラインです。

## プルリクエスト作成の手順

1. デフォルトブランチにマージされてない現在のブランチにあるコミットの一覧と、その差分を把握してください

   ```bash
   git status | cat
   git log --oneline | cat
   git diff main..HEAD | cat
   ```

2. プルリクエストの説明文を一時ファイルに作成
   ```bash
   PR_DESCRIPTION_FILE="temp_pull_request_body.md"
   touch "$PR_DESCRIPTION_FILE"
   ```

3. プルリクエストの説明文を記述
   - 変更の目的と背景
   - 主な変更内容
   - テスト方法
   - 関連するIssue番号（存在する場合）
   - レビュー時の注意点
   - セキュリティやパフォーマンスへの影響（該当する場合）
   - スクリーンショットや動作確認の動画（該当する場合）

4. GitHub CLIを使用してプルリクエストを作成
   ```bash
   # プルリクエストの作成
   gh pr create \
     --title "タイトル" \
     --body-file "$PR_DESCRIPTION_FILE"
   ```

5. 一時ファイルの削除
   ```bash
   # 一時ファイルの削除
   rm "$PR_DESCRIPTION_FILE"
   ```

## プルリクエストのタイトル規則

- タイトルは変更内容を簡潔に表現
- プレフィックスを使用して変更の種類を明示
  - feat: 新機能
  - fix: バグ修正
  - docs: ドキュメントのみの変更
  - style: コードの意味に影響を与えない変更
  - refactor: バグ修正や機能追加を含まないコードの変更
  - perf: パフォーマンス改善のための変更
  - test: テストの追加・修正
  - chore: ビルドプロセスやツールの変更

## プルリクエストの説明文テンプレート

```markdown
## 変更の目的
[変更の目的と背景を説明]

## 主な変更内容
- [変更点1]
- [変更点2]
- [変更点3]

## テスト方法
[テスト手順や確認方法を説明]

## 関連Issue
Closes #[Issue番号]

## レビュー時の注意点
[レビュアーに特に注意してほしい点があれば記載]

## セキュリティ・パフォーマンスへの影響
[該当する場合のみ記載]

## スクリーンショット/動画
[該当する場合のみ添付]
```

## 注意事項

1. プルリクエストを作成する前に、最新のmainブランチを取り込む
2. コンフリクトが発生している場合は、先に解決する
3. CIが正常に完了することを確認
4. セルフレビューを行い、不要なコードやコメントを削除
5. 一時ファイルは必ず削除する
